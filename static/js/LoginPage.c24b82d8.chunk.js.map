{"version":3,"file":"static/js/LoginPage.c24b82d8.chunk.js","mappings":"gTAIaA,EAAYC,EAAAA,GAAAA,IAAH,4NACIC,EAKEC,GAMfC,EAAeH,EAAAA,GAAAA,IAAH,yiBA6BZI,EAAgBJ,EAAAA,GAAAA,IAAH,kfA0BX,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,aAKvBC,EAASR,EAAAA,GAAAA,GAAH,6HAONS,EAAOT,EAAAA,GAAAA,KAAH,mZAoBF,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,aAKvBG,EAAQV,EAAAA,GAAAA,MAAH,sJAULW,EAAQX,EAAAA,GAAAA,MAAH,kQAYLY,EAASZ,EAAAA,GAAAA,OAAH,gSAQG,SAAAK,GAAK,OAAIA,EAAMC,MAAMO,gBAO9BC,EAAcd,EAAAA,GAAAA,EAAH,+JAOX,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,a,UChJnB,SAASQ,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAElB,IAAK,WACH,OAAOJ,EAAYI,GAErB,QACE,SAaN,OACE,SAAC,EAAD,WACE,UAAC,EAAD,YACE,UAAC,EAAD,YACE,SAAC,EAAD,qBAEA,SAAC,KAAD,CAAMC,GAAG,IAAT,UACE,SAAC,MAAD,UAIJ,UAAC,EAAD,CAAQC,SApBO,SAAAC,GACnBA,EAAEC,iBACY,KAAVX,GAA6B,KAAbE,GAClBL,EAASe,EAAAA,GAAAA,MAAqB,CAAEZ,MAAAA,EAAOE,SAAAA,KAEzCD,EAAS,IACTE,EAAY,KAcwBU,aAAa,MAA7C,WACE,UAAC,EAAD,WACG,IADH,SAGE,SAAC,EAAD,CACEC,KAAK,QACLR,KAAK,QACLC,MAAOP,EACPe,SAAUX,QAId,UAAC,EAAD,WACG,IADH,YAGE,SAAC,EAAD,CACEU,KAAK,WACLR,KAAK,WACLC,MAAOL,EACPa,SAAUX,QAId,6CAEA,SAAC,EAAD,CAAUU,KAAK,SAAf,yBAGF,UAAC,EAAD,sCACyB,SAAC,KAAD,CAAMN,GAAG,YAAT","sources":["views/LoginPage/LoginPage.styled.js","views/LoginPage/LoginPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport fone768 from 'images/fone-768.jpg';\nimport fone1200 from 'images/fone-1200.jpg';\n\nexport const Container = styled.div`\n  background-image: url(${fone768});\n  background-size: cover;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    background-image: url(${fone1200});\n    height: 100vh;\n    padding: 0;\n  }\n`;\n\nexport const LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0 20px;\n  height: 100vh;\n\n  @media screen and (min-width: 480px) {\n    width: 440px;\n    margin: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    height: 80vh;\n    padding: 0;\n    border-radius: 20px;\n    background-image: linear-gradient(\n      to right,\n      rgba(47, 48, 58, 0.4),\n      rgba(47, 48, 58, 0.4)\n    );\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1100px;\n  }\n`;\n\nexport const TittleWrapper = styled.div`\n  padding-left: 20px;\n  margin-top: 150px;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 60px;\n    margin-top: 50px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding-left: 100px;\n  }\n\n  & > a {\n    display: inline-block;\n    margin-top: 10px;\n    margin-left: -10px;\n\n    & svg {\n      color: var(--white-color);\n      height: 30px;\n      width: 30px;\n    }\n\n    &:hover svg,\n    &:focus svg {\n      color: ${props => props.theme.mainColor};\n    }\n  }\n`;\n\nexport const Tittle = styled.h2`\n  font-size: 28px;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: var(--white-color);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0 40px;\n\n  @media screen and (min-width: 768px) {\n    width: 360px;\n    margin: 0 auto;\n  }\n\n  & p {\n    margin-top: 10px;\n    margin-bottom: 40px;\n    text-align: end;\n    font-size: 16px;\n    color: var(--semi-white-color);\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      color: ${props => props.theme.mainColor};\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 16px;\n  color: var(--semi-white-color);\n\n  &:first-child {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  outline: none;\n  margin-top: 15px;\n  width: 100%;\n  font-size: 20px;\n  color: rgba(255, 255, 255, 0.8);\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid var(--semi-white-color);\n`;\n\nexport const Button = styled.button`\n  display: inline;\n  margin: 0 auto;\n  padding: 15px 0;\n  width: 250px;\n  border: none;\n  border-radius: 35px;\n  color: var(--white-color);\n  background-image: ${props => props.theme.mainGradient};\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\n\nexport const RegisterRef = styled.p`\n  margin-bottom: 30px;\n  text-align: center;\n  font-size: 16px;\n  color: var(--semi-white-color);\n\n  & a {\n    color: ${props => props.theme.mainColor};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { IoChevronBackOutline } from 'react-icons/io5';\n\nimport { authOperations } from 'redux/auth';\nimport * as S from './LoginPage.styled';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n\n      case 'password':\n        return setPassword(value);\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email !== '' && password !== '') {\n      dispatch(authOperations.logIn({ email, password }));\n    }\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <S.Container>\n      <S.LoginWrapper>\n        <S.TittleWrapper>\n          <S.Tittle>Login</S.Tittle>\n\n          <Link to=\"/\">\n            <IoChevronBackOutline />\n          </Link>\n        </S.TittleWrapper>\n\n        <S.Form onSubmit={handleSubmit} autoComplete=\"off\">\n          <S.Label>\n            {' '}\n            Email\n            <S.Input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </S.Label>\n\n          <S.Label>\n            {' '}\n            Password\n            <S.Input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </S.Label>\n\n          <p>Forgot Password?</p>\n\n          <S.Button type=\"submit\">Sign in</S.Button>\n        </S.Form>\n\n        <S.RegisterRef>\n          Don't have an Account? <Link to=\"/register\">Sign Up</Link>\n        </S.RegisterRef>\n      </S.LoginWrapper>\n    </S.Container>\n  );\n}\n"],"names":["Container","styled","fone768","fone1200","LoginWrapper","TittleWrapper","props","theme","mainColor","Tittle","Form","Label","Input","Button","mainGradient","RegisterRef","LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","to","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange"],"sourceRoot":""}